const mongoose = require('mongoose');

const vulnerabilitySchema = new mongoose.Schema({
  subdomainId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Subdomain',
    required: true
  },
  title: {
    type: String,
    required: [true, 'Il titolo della vulnerabilità è obbligatorio'],
    trim: true
  },
  description: {
    type: String,
    required: [true, 'La descrizione è obbligatoria'],
    trim: true
  },
  severity: {
    type: String,
    enum: ['critical', 'high', 'medium', 'low', 'info'],
    required: [true, 'La severity è obbligatoria']
  },
  cvss: {
    type: Number,
    min: 0,
    max: 10
  },
  cve: {
    type: String,
    trim: true
  },
  status: {
    type: String,
    enum: ['open', 'fixed', 'accepted-risk', 'false-positive'],
    default: 'open'
  },
  proof: {
    type: String,
    trim: true
  },
  remediation: {
    type: String,
    trim: true
  },
  discoveryDate: {
    type: Date,
    default: Date.now
  },
  affectedUrl: {
    type: String,
    trim: true
  },
  impact: {
    type: String,
    trim: true
  }
}, {
  timestamps: true
});

// Indici per ricerca e filtraggio
vulnerabilitySchema.index({ subdomainId: 1, severity: 1 });
vulnerabilitySchema.index({ status: 1 });

module.exports = mongoose.model('Vulnerability', vulnerabilitySchema);